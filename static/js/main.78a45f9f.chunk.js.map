{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Homepage.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Exchanges.jsx","components/About.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","activeMenu2","setActiveMenu2","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","TeamOutlined","cryptoheaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery","Loader","Cryptocurrencies","simplified","cryptoList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","name","toLowerCase","includes","console","log","style","textAlign","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","id","display","flexDirection","justifyContent","alignItems","title","rank","extra","iconUrl","alt","hoverable","millify","price","marketCap","change","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","Text","Typography","Option","Select","demoImage","News","setNewsCategory","cryptoNews","span","showSearch","optionFilterProp","filterOption","input","option","indexOf","news","i","href","rel","maxWidth","height","image","thumbnail","contentUrl","description","length","substring","provider","moment","datePublished","startOf","fromNow","Homepage","globalState","stats","marginTop","border","padding","background","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimeStamp","history","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","links","link","type","Panel","Collapse","Exchanges","exchangesList","exchanges","marginBottom","exchange","showArrow","header","marketShare","About","md","paddingTop","Paragraph","fontSize","color","paddingBottom","App","exact","path","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.78a45f9f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React,{useState,useEffect} from 'react'\r\nimport {Button,Menu,Typography,Avatar} from 'antd'\r\nimport {Link} from 'react-router-dom'\r\nimport {HomeOutlined, MoneyCollectOutlined,BulbOutlined,FundOutlined,MenuOutlined,TeamOutlined} from '@ant-design/icons'\r\nimport icon from '../images/cryptocurrency.png'\r\nconst Navbar = () => {\r\n    const[activeMenu,setActiveMenu] = useState(true);\r\n    const[screenSize,setScreenSize] = useState(null);\r\n    const[activeMenu2,setActiveMenu2] = useState(true);\r\n    useEffect(()=>{\r\n        const handleResize = () => setScreenSize(window.innerWidth);\r\n        window.addEventListener(\"resize\",handleResize);\r\n        handleResize();\r\n\r\n        return ()=> window.removeEventListener(\"resize\",handleResize);\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(screenSize <= 768){\r\n            setActiveMenu2(false);\r\n        } else\r\n        {\r\n            setActiveMenu2(true);\r\n        }\r\n    },[screenSize])\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n            <Avatar src={icon} size=\"large\"/>\r\n            <Typography.Title level={2} className=\"logo\">\r\n                <Link to=\"/\">Cryptoverse</Link>\r\n            </Typography.Title>\r\n            <Button className=\"menu-control-container\" onClick={()=>setActiveMenu2(!activeMenu2)}>\r\n                <MenuOutlined/>\r\n            </Button>\r\n            </div>\r\n            {activeMenu2 && (\r\n                 <Menu theme=\"dark\">\r\n                 <Menu.Item icon={<HomeOutlined/>} onClick={()=>setActiveMenu(!activeMenu)} >\r\n                     <Link to=\"/\">Home</Link>\r\n                 </Menu.Item>\r\n                 <Menu.Item icon={<FundOutlined/>} onClick={()=>setActiveMenu(!activeMenu)}>\r\n                     <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n                 </Menu.Item>\r\n                 <Menu.Item icon={<MoneyCollectOutlined/>} onClick={()=>setActiveMenu(!activeMenu)}>\r\n                     <Link to=\"/exchanges\">Exchanges</Link>\r\n                 </Menu.Item>\r\n                 <Menu.Item icon={<BulbOutlined/>} onClick={()=>setActiveMenu(!activeMenu)}>\r\n                     <Link to=\"/news\">News</Link>\r\n                 </Menu.Item>\r\n                 <Menu.Item icon={<TeamOutlined />} onClick={()=>setActiveMenu(!activeMenu)}>\r\n                     <Link to=\"/about\">Who We Are</Link>\r\n                 </Menu.Item>\r\n             </Menu>\r\n            )}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import {createApi,fetchBaseQuery} from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoheaders = {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key':  'd1e9d7ba8amsh5b8c24c71f7a394p170aa4jsndae8a6d5fc15'\r\n  }\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com'\r\n\r\n const createRequest = (url) =>({url,headers:cryptoheaders})\r\n  export const cryptoApi = createApi({\r\n      reducerPath:\"cryptoApi\",\r\n      baseQuery: fetchBaseQuery({baseUrl}),\r\n      endpoints:(builder)=>({\r\n          getCryptos:builder.query({\r\n              query:(count)=> createRequest(`/coins?limit=${count}`)\r\n          }),\r\n          getExchanges:builder.query({\r\n              query: ()=> createRequest(`/exchanges`),\r\n          }),\r\n          getCryptoDetails:builder.query({\r\n              query:(coinId) => createRequest(`/coin/${coinId}`),\r\n          }),\r\n          getCryptoHistory:builder.query({\r\n              query:({coinId,timeperiod})=> createRequest(`coin/${coinId}/history/${timeperiod}`)\r\n          })\r\n      })\r\n  })\r\n\r\nexport const {\r\n    useGetCryptosQuery,useGetCryptoDetailsQuery,useGetExchangesQuery,useGetCryptoHistoryQuery\r\n} = cryptoApi;","   \r\nimport React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Loader = () => (\r\n  <div className=\"loader\">\r\n    <Spin />\r\n  </div>\r\n);\r\n\r\nexport default Loader;","import React,{useState,useEffect} from 'react'\r\nimport millify from 'millify';\r\nimport {Link} from 'react-router-dom';\r\nimport {Card,Row,Col,Input,Typography} from 'antd'\r\nimport Loader from './Loader'\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\n const Cryptocurrencies = ({simplified}) => {\r\nconst count = simplified ? 10 : 100;\r\n     const {data: cryptoList,isFetching} = useGetCryptosQuery(count);\r\n     const[cryptos,setCryptos] = useState([]);\r\n   const[searchTerm,setSearchTerm] = useState('');\r\n\r\n   useEffect(()=>{\r\n    const filteredData = cryptoList?.data?.coins.filter((coin)=> coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\r\n    setCryptos(filteredData);\r\n   },[cryptoList,searchTerm])\r\n     if(isFetching) return <Loader/>;\r\n     console.log(cryptos);\r\n    return (\r\n        <>\r\n        <div className=\"head\" >\r\n        <Typography.Title level={2} className=\"heading\" style={{textAlign:\"center\"}}>Crypto Currency</Typography.Title>\r\n        </div>\r\n        {\r\n            !simplified && (\r\n                <div className=\"search-crypto\">\r\n            <Input placeholder=\"Search Cryptocurrency\" onChange={(e)=>setSearchTerm(e.target.value)}/>\r\n        </div>\r\n            )\r\n        }\r\n        <Row gutter={[32,32]} className=\"crypto-card-container\">\r\n            {\r\n                cryptos?.map((currency)=>(\r\n                    <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n                      <Link to={`/crypto/${currency.id}`}>\r\n                          <Card style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\"}}\r\n                          title={`${currency.rank}. ${currency.name}`}\r\n                          extra={<img className=\"crypto-image\" src={currency.iconUrl} alt=\"crypto\"/>}\r\n                          hoverable\r\n                          >\r\n                           <p>Price: {millify(currency.price)}</p>\r\n                           <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                           <p>Daily Change: {millify(currency.change)}%</p>\r\n\r\n                          </Card>\r\n                      </Link>\r\n                    </Col>\r\n                ))\r\n            }\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\nexport default Cryptocurrencies;\r\n","import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoheaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n    'x-rapidapi-key': 'd1e9d7ba8amsh5b8c24c71f7a394p170aa4jsndae8a6d5fc15' \r\n  }\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com'\r\n  const createRequest = (url) =>({url,headers:cryptoheaders})\r\n  export const cryptoNewsApi = createApi({\r\n      reducerPath:\"cryptoNewsApi\",\r\n      baseQuery: fetchBaseQuery({baseUrl}),\r\n      endpoints:(builder)=>({\r\n          getCryptoNews:builder.query({\r\n              query:({newsCategory,count})=> createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`)\r\n          })\r\n      })\r\n  })\r\n\r\n  export const { useGetCryptoNewsQuery } = cryptoNewsApi;\r\n","import React,{useState} from 'react'\r\nimport {Select,Typography,Row,Col,Avatar,Card} from 'antd'\r\nimport moment from 'moment'\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader'\r\n\r\nimport {useGetCryptoNewsQuery} from '../services/cryptoNewsApi'\r\n\r\nconst {Text,Title} = Typography;\r\nconst {Option} = Select;\r\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\r\n\r\nconst News = ({simplified}) =>{\r\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\r\n    const { data } = useGetCryptosQuery(100);\r\n\r\n    const {data: cryptoNews} = useGetCryptoNewsQuery({newsCategory: 'Cryptocurrency', count:simplified ? 6 : 12})\r\n    if(!cryptoNews?.value) return <Loader/>\r\n    return(\r\n        <Row gutter={[24,24]}>\r\n\r\n{!simplified && (\r\n        <Col span={24}>\r\n          <Select\r\n            showSearch\r\n            className=\"select-news\"\r\n            placeholder=\"Select a Crypto\"\r\n            optionFilterProp=\"children\"\r\n            onChange={(value) => setNewsCategory(value)}\r\n            filterOption={(input, option) => option.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n          >\r\n            <Option value=\"Cryptocurency\">Cryptocurrency</Option>\r\n            {data?.data?.coins?.map((currency) => <Option value={currency.name}>{currency.name}</Option>)}\r\n          </Select>\r\n        </Col>\r\n      )}\r\n\r\n            {\r\n                cryptoNews.value.map((news,i)=>(\r\n                    <Col xs={24} sm={12} lg={8} key={i}>\r\n                        <Card hoverable className=\"news-card\">\r\n                         <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                           <div className=\"news-image-container\">\r\n                            <Title className=\"news-title\" level={4}>{news.name}</Title>\r\n                               <img style={{maxWidth:'200px',height:'100px'}} src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"news\"></img>\r\n                           </div>\r\n                           <p>{news.description.length > 100 ? `${news.description.substring(0, 100)}...` : news.description}</p>\r\n                           <div className=\"provider-container\">\r\n                <div>\r\n                  <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\r\n                  <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                </div>\r\n                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n              </div>\r\n                         </a>\r\n                        </Card>\r\n                    </Col>\r\n                ))\r\n            }\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react'\r\nimport millify from 'millify';\r\nimport {Typography,Row,Col, Statistic} from \"antd\";\r\nimport {Link} from 'react-router-dom';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport Cryptocurrencies from './Cryptocurrencies';\r\nimport News from './News';\r\nimport Loader from './Loader'\r\n\r\nconst {Title} = Typography;\r\nconst Homepage = () =>{\r\n    const {data,isFetching} = useGetCryptosQuery(10);\r\n    const globalState = data?.data?.stats;\r\n\r\n    if(isFetching) return <Loader/>;\r\n    return(\r\n        <>\r\n        <div className=\"head\" >\r\n        <Title level={2} className=\"heading\" style={{textAlign:\"center\"}}>Global Crypto Statistics</Title>\r\n        </div>\r\n        <Row style={{textAlign:\"center\",marginTop:\"50px\", border:\"2px dotted black\",padding:\"15px\",background:\"#e6f7ff\"}}>\r\n            <Col span={12} className=\"globalCrypto\"><Statistic title=\"Total Cryptocurrencies\" value={globalState.total}/></Col>\r\n            <Col span={12} className=\"globalCrypto1\"><Statistic title=\"Total Exchanges\" value={millify(globalState.totalExchanges)}/></Col>\r\n            <Col span={12} className=\"globalCrypto2\"><Statistic title=\"Total Market Cap\" value={millify(globalState.totalMarketCap)}/></Col>\r\n            <Col span={12} className=\"globalCrypto3\"><Statistic title=\"Total 24h Volume\" value={millify(globalState.total24hVolume)}/></Col>\r\n            <Col span={12} className=\"globalCrypto4\"><Statistic title=\"Total Markets\" value={millify(globalState.totalMarkets)}/></Col>\r\n\r\n        </Row>\r\n        <div className=\"home-heading-container\">\r\n         <Title level={4} className=\"home-title\">Top 10 Cryptocurrencies</Title>\r\n         </div>\r\n         <Cryptocurrencies simplified/>\r\n         <div className=\"home-heading-container1\">\r\n         <Title level={5} className=\"show-more\"><Link to='/cryptocurrencies' className=\"showmore\">show more</Link></Title>\r\n         </div>\r\n         <div className=\"home-heading-container\">\r\n         <Title level={4} className=\"home-title\">Latest Crypto News</Title>\r\n         </div>\r\n         <News simplified/>\r\n         <div className=\"home-heading-container1\">\r\n         <Title level={5} className=\"show-more\"><Link to='/news' className=\"showmore\">show more</Link></Title>\r\n         </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage;\r\n\r\n","import React from 'react'\r\nimport {Line} from 'react-chartjs-2'\r\nimport {Col,Row,Typography} from 'antd'\r\n\r\nconst {Title} = Typography;\r\n\r\nconst LineChart = ({coinHistory,currentPrice,coinName}) => {\r\n    const coinPrice = [];\r\n    const coinTimeStamp=[];\r\n\r\n\r\nfor(let i=0; i < coinHistory?.data?.history?.length; i += 1){\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n}\r\n\r\nfor(let i=0; i < coinHistory?.data?.history?.length; i += 1){\r\n    coinTimeStamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\r\n}\r\n\r\nconst data = {\r\n    labels: coinTimeStamp,\r\n    datasets:[\r\n        {\r\n            label:'Price In USD',\r\n            data:coinPrice,\r\n            fill:false,\r\n            backgroundColor:'#0071bd',\r\n            borderColor:'#0071bd',\r\n        },\r\n    ],\r\n};\r\n\r\nconst options = {\r\n    scales:{\r\n        yAxes:[\r\n            {\r\n                ticks:{\r\n                    beginAtZero:true,\r\n                },\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nreturn(\r\n    <>\r\n    <Row className=\"chart-header\">\r\n        <Col className=\"price-container\">\r\n            <Title level={5} className=\"price-change\">Change:{coinHistory?.data?.change}%</Title>\r\n            <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\r\n        </Col>\r\n    </Row>\r\n    <Line data={data} options={options} />\r\n    </>\r\n);\r\n}\r\n\r\nexport default LineChart;","import React,{useState} from 'react'\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport formatAmount from 'indian-currency-formatter';\r\nimport { useParams } from 'react-router-dom';\r\nimport millify from 'millify'\r\nimport Loader from './Loader'\r\nimport LineChart from './LineChart';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery} from '../services/cryptoApi';\r\nconst {Title,Text} = Typography;\r\nconst {Option} = Select;\r\n\r\n const CryptoDetails = () => {\r\n   const { coinId } = useParams();\r\n   const[timeperiod,setTimePeriod] = useState('7d');\r\n   const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n   const {data: coinHistory } = useGetCryptoHistoryQuery({coinId, timeperiod});\r\n   const cryptoDetails = data?.data?.coin;\r\n\r\n   if (isFetching) return <Loader />;\r\n \r\n   const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n \r\n   const stats = [\r\n     { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n     { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n     { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n     { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n     { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n   ];\r\n \r\n   const genericStats = [\r\n     { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n     { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n     { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n     { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n     { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n   ];\r\n    return (\r\n      <>\r\n      <Col className=\"coin-detail-container\">\r\n        <Col className=\"coin-heading-container\">\r\n          <Title level={2} className=\"coin-name\">\r\n            {cryptoDetails.name} ({cryptoDetails.slug})\r\n          </Title>\r\n          <p>\r\n            {cryptoDetails.name} live price in USD View Statistics, Market cap and Supply.\r\n          </p>\r\n        </Col>\r\n        <Select\r\n           defaultValue=\"7d\"\r\n           className=\"select-timeperiod\"\r\n           placeholder=\"Select Time Period\"\r\n           onChange={(value) => setTimePeriod(value)}\r\n          >\r\n            {time.map((date)=><Option key={date}>{date}</Option>)}\r\n          </Select>\r\n          \r\n         <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name}/>\r\n          \r\n          <Col className=\"stats-container\">\r\n            <Col className=\"coin-value-statistics\">\r\n              <Col className=\"coin-value-statistics-heading\">\r\n              <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n              </Col>\r\n              {\r\n                stats.map(({ icon, title, value})=>(\r\n                  <Col className=\"coin-stats\">\r\n                    <Col className=\"coin-stats-name\">\r\n                      <Text>{icon}</Text>\r\n                      <Text>{title}</Text>\r\n                      </Col>\r\n                      <Text className=\"stats\">{value}</Text>\r\n                  </Col>\r\n                ))\r\n              }\r\n            </Col>\r\n            <Col className=\"other-stats-info\">\r\n              <Col className=\"coin-value-statistics-heading\">\r\n                <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\r\n                <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, and trading volume. </p>\r\n              </Col>\r\n              {\r\n                genericStats.map(({icon,title,value})=>(\r\n                  <Col className=\"coin-stats\">\r\n                    <Col className=\"coin-stats-name\">\r\n                      <Text>{icon}</Text>\r\n                      <Text>{title}</Text>\r\n                     </Col> \r\n                     <Text className=\"stats\">{value}</Text>\r\n                    </Col>\r\n                ))\r\n              }\r\n            </Col>\r\n          </Col>\r\n          <Col className=\"coin-desc-link\">\r\n            <Row className=\"coin-desc\">\r\n              <Title level={3} className=\"coin-details-heading\">\r\n                What is {cryptoDetails.name}?\r\n              </Title>\r\n              {HTMLReactParser(cryptoDetails.description)}\r\n              </Row>\r\n              <Col className=\"coin-links\">\r\n                <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\r\n                {\r\n                  cryptoDetails.links?.map((link)=>(\r\n                    <Row className=\"coin-link\" key={link.name}>\r\n                      <Title level={5} className=\"link-name\">{link.type}</Title>\r\n                      <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\r\n                    </Row>\r\n                  ))\r\n                }\r\n              </Col>\r\n          </Col>\r\n        </Col>\r\n\r\n      </>\r\n    )\r\n}\r\nexport default CryptoDetails;\r\n","import React from 'react'\r\nimport millify from 'millify'\r\nimport {Collapse,Row,Col,Typography,Avatar} from 'antd'\r\nimport HTMLReactParser from 'html-react-parser'\r\nimport { useGetExchangesQuery } from '../services/cryptoApi'\r\nimport Loader from './Loader'\r\n\r\nconst {Text} = Typography;\r\nconst {Panel} = Collapse;\r\n\r\nconst Exchanges = () =>{\r\n    const { data, isFetching} = useGetExchangesQuery();\r\n    const exchangesList = data?.data?.exchanges;\r\n    if (isFetching) return <Loader />;\r\n  return (\r\n      <>\r\n      <div className=\"head\" >\r\n        <Typography.Title level={2} className=\"heading\" style={{textAlign:\"center\"}}>Exchanges</Typography.Title>\r\n        </div>\r\n        <div style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",marginBottom:\"20px\"}}>\r\n         <Typography.Title level={3} style={{textAlign:\"center\"}}>Here you will get know about all the listed exchanges along with there Trade Volume and Markets.</Typography.Title>\r\n        </div>\r\n      <Row>\r\n          <Col span={6} style={{textAlign:\"center\"}}>Exchanges</Col>\r\n          <Col span={6} style={{textAlign:\"center\"}}>24h Trade Volume</Col>\r\n          <Col span={6} style={{textAlign:\"center\"}}>Markets</Col>\r\n          <Col span={6} style={{textAlign:\"center\"}}>Change</Col>\r\n      </Row>\r\n      <Row>\r\n      {\r\n          exchangesList.map((exchange)=>(\r\n              <Col span={24}>\r\n                   <Collapse>\r\n                   <Panel\r\n                   key={exchange.id}\r\n                   showArrow={false}\r\n                   header={(\r\n                       <Row key={exchange.id}>\r\n                           <Col span={6}>\r\n                               <Text><strong>{exchange.rank}</strong></Text>\r\n                               <Avatar className=\"exchange-image\" src={exchange.iconUrl}/>\r\n                               <Text><strong>{exchange.name}</strong></Text>\r\n                           </Col>\r\n                           <Col span={6} style={{textAlign:\"center\"}}>${millify(exchange.volume)}</Col>\r\n                           <Col span={6} style={{textAlign:\"center\"}}>${millify(exchange.numberOfMarkets)}</Col>\r\n                           <Col span={6} style={{textAlign:\"center\"}}>${millify(exchange.marketShare)}</Col>\r\n\r\n                       </Row>\r\n                   )}\r\n                   >\r\n                       {HTMLReactParser(exchange.description || '')}\r\n                   </Panel>\r\n              </Collapse>\r\n              </Col>\r\n             \r\n\r\n          ))\r\n      }\r\n      </Row>\r\n      </>\r\n    )\r\n}\r\nexport default Exchanges;","import React from 'react'\r\nimport {Row,Col,Typography} from 'antd'\r\nconst About = () =>{\r\n    return(\r\n        <>\r\n        <Row className=\"about\">\r\n            <Col xs={10} sm={12} lg={10} md={10}>\r\n                <Typography.Title level={2} style={{textAlign:\"center\",paddingTop:\"20px\"}}>About Us</Typography.Title>\r\n                <Typography.Paragraph  className=\"abtParagraph\" style={{textAlign:\"center\",fontSize:\"1.3rem\"}}>\r\n                    <span style={{color:\"red\",fontSize:\"30px\"}}>\"</span>\r\n                     Hello, I am <span className=\"abt\">Rohit Pimpalkar(freelancer)</span>, Basic idea Behind developing these application is <br></br>\r\n                     to provide information in more precious way to the people who are interested in Crypto Currency.<br></br>\r\n                     <span className=\"abt\">CryptoVerse</span> is like a one stop for all Crypto lovers, where you can get all the information<br></br>\r\n                     regarding Crypto Currency. Here on these application you will get know about all exchanges with <br></br>\r\n                     there Totol Market Cap, 24H Volume, Total Cryptocurrencies, Total Market, Total Exchanges, and<br></br>\r\n                      news along with live udates and in depth details of all the crypto Currencies along with <br></br>\r\n                      statistics and graph. \r\n                    <span style={{color:\"red\",fontSize:\"30px\"}}>\"</span>\r\n\r\n                </Typography.Paragraph>\r\n                <Typography.Paragraph style={{textAlign:\"center\" ,paddingBottom:\"30px\"}}>\r\n                    Developed By : Rohit Pimpalkar (FreeLancer) Contact : rohitpimpalkar052@gmail.com\r\n                </Typography.Paragraph>\r\n                \r\n            </Col>\r\n        </Row>\r\n        </>\r\n    );\r\n}\r\nexport default About;","import React from 'react'\nimport {Switch,Route,Link} from 'react-router-dom';\nimport { Layout,Typography,Space } from 'antd';\nimport {Navbar,Exchanges,Homepage,Cryptocurrencies,CryptoDetails,News,About} from './components'\nimport './App.css'\n const App = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n           <Navbar/>\n      </div>\n      <div className=\"main\">\n      <Layout>\n        <div className=\"routes\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Homepage />\n            </Route>\n            <Route exact path=\"/exchanges\">\n              <Exchanges />\n            </Route>\n            <Route exact path=\"/cryptocurrencies\">\n              <Cryptocurrencies />\n            </Route>\n            <Route exact path=\"/crypto/:coinId\">\n              <CryptoDetails />\n            </Route>\n            <Route exact path=\"/news\">\n              <News />\n            </Route>\n            <Route exact path=\"/about\">\n              < About/>\n            </Route>\n          </Switch>\n        </div>\n      </Layout>\n      \n      <div className=\"footer\">\n        <Typography.Title level={5} style={{color:'white',textAlign:\"center\"}}>\n          Cryptoverse <br/>\n          All rights reserved\n        </Typography.Title>\n        <Space>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/exchanges\">Exchanges</Link>\n          <Link to=\"/news\">News</Link>\n\n        </Space>\n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;","import {configureStore} from '@reduxjs/toolkit';\r\nimport {cryptoApi} from '../services/cryptoApi'\r\nimport {cryptoNewsApi} from '../services/cryptoNewsApi';\r\nexport default configureStore({\r\n    reducer:{\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n    },\r\n})\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport store from './app/store'\nimport 'antd/dist/antd.css';\nReactDOM.render(\n <Router>\n   <Provider store={store}>\n     <App/>\n   </Provider>\n </Router>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}